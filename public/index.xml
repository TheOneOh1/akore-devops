<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anand Kore</title>
    <link>http://localhost:1313/static-pages/</link>
    <description>Recent content on Anand Kore</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/static-pages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>http://localhost:1313/static-pages/posts/2014/09/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/09/creating-a-new-theme/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.&lt;/p&gt;&#xA;&lt;p&gt;We&amp;rsquo;ll start with creating a new site with a very basic template. Then we&amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>http://localhost:1313/static-pages/posts/2014/03/migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/03/migrate-to-hugo-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.&#xA;With Jekyll, something that looked like&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/&#xD;&#xA;    ▾ images/&#xD;&#xA;        logo.png&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;should become&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/&#xD;&#xA;    ▾ static/&#xD;&#xA;        ▾ images/&#xD;&#xA;            logo.png&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as &lt;code&gt;CNAME&lt;/code&gt;) to be moved to &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Experience</title>
      <link>http://localhost:1313/static-pages/experience/</link>
      <pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/experience/</guid>
      <description>&lt;hr&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 class=&#34;experience-title&#34; id=&#34;project-engineer--c-dac-pune&#34;&gt;Project Engineer | C-DAC, Pune&lt;/h2&gt;&#xA;&lt;h1 class=&#34;experience-date&#34; id=&#34;nov-2022---present&#34;&gt;Nov 2022 - Present&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Led the transition from local development to GitLab flow, implementing an efficient branching strategy.&lt;/li&gt;&#xA;&lt;li&gt;Migrated projects to GitLab CI/CD, automating processes for improved efficiency.&lt;/li&gt;&#xA;&lt;li&gt;Integrated SonarQube with CI/CD pipelines for enhanced code quality analysis.&lt;/li&gt;&#xA;&lt;li&gt;Containerized multiple microservices applications using Docker and Docker Swarm.&lt;/li&gt;&#xA;&lt;li&gt;Developed a logging and tracing workflow for Spring Boot microservices using Rsyslog, Promtail-Loki, Prometheus, and Grafana.&lt;/li&gt;&#xA;&lt;li&gt;Responsible for setup of CI/CD process implementation using Jenkins to automate routine jobs.&lt;/li&gt;&#xA;&lt;li&gt;Hands-on experience in Installation and Configuration of Distributed Version Control System GIT and GitLab&lt;/li&gt;&#xA;&lt;li&gt;Worked as an SCM admin to manage version control, assisting programmers and developers with tasks such as project creation, branch management, merge requests, code reverts, and resolving merge conflicts.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 class=&#34;experience-title&#34; id=&#34;csa--sme--amazon-pune&#34;&gt;CSA &amp;amp; SME | Amazon, Pune&lt;/h2&gt;&#xA;&lt;h1 class=&#34;experience-date&#34; id=&#34;july-2018---march-2021&#34;&gt;July 2018 - March 2021&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Developed interpersonal skills while helping in amazing customer service and troubleshooting issues.&lt;/li&gt;&#xA;&lt;li&gt;Trained new personnel on company operations, policies, and services, gaining leadership skills.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Projects</title>
      <link>http://localhost:1313/static-pages/projects/</link>
      <pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/projects/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h3 class=&#34;experience-title&#34; id=&#34;arrow_right-centralized-microservices-monitoring&#34;&gt;&amp;#x27a1;&amp;#xfe0f; Centralized Microservices Monitoring&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Configured a centralized &lt;em&gt;Syslog Server&lt;/em&gt;, where logs of all microservices are captured.&lt;/li&gt;&#xA;&lt;li&gt;Scraping the metrics and logs using &lt;em&gt;Prometheus&lt;/em&gt;, &lt;em&gt;Promtail&lt;/em&gt; and &lt;em&gt;Loki&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Server is microservices have been configured with Node Exporters by Prometheus for server monitoring.&lt;/li&gt;&#xA;&lt;li&gt;Using Prometheus and Loki as a datasource in &lt;em&gt;Grafana&lt;/em&gt; to display various dashboards for monitoring.&lt;/li&gt;&#xA;&lt;li&gt;Integrated Grafana with C-DAC&amp;rsquo;s Secure LDAP, SSL certificate with nginx reverse proxy, email and SMS alerting and custom login page.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h3 class=&#34;experience-title&#34; id=&#34;arrow_right-k8s-cluster-ids-with-splunk&#34;&gt;&amp;#x27a1;&amp;#xfe0f; K8s Cluster IDS with SPLUNK&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Multiple &lt;em&gt;AWS&lt;/em&gt; Instances spawed using EC2 in a master-slave &lt;em&gt;Kubernetes&lt;/em&gt; cluster.&lt;/li&gt;&#xA;&lt;li&gt;This architecture is secured with &lt;em&gt;SNORT intrusion detection system&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;SPLUNK&lt;/em&gt; node is installed configured to display the dashboard for monitoring&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h3 class=&#34;experience-title&#34; id=&#34;arrow_right-containerized-services&#34;&gt;&amp;#x27a1;&amp;#xfe0f; Containerized Services&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Deployed multiple microservices and their corresponding &lt;em&gt;Containerized Databases&lt;/em&gt; within a &lt;em&gt;Docker Network&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;This setup streamlined the deployment process, improved resource utilization, and ensured seamless communication between microservices and their databases.&lt;/li&gt;&#xA;&lt;li&gt;The project enhanced scalability, maintainability, and overall system performance.&lt;/li&gt;&#xA;&lt;li&gt;Future scope involves, these container be added in a &lt;em&gt;SWARM&lt;/em&gt; or &lt;em&gt;Kubernetes&lt;/em&gt; cluster for better management and monitoring.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h3 class=&#34;experience-title&#34; id=&#34;arrow_right-public-deployments&#34;&gt;&amp;#x27a1;&amp;#xfe0f; Public Deployments&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Led the design and implementation of system architecture for various public hosted services, including the ACTS Website and ACTS PMS, at CDAC.&lt;/li&gt;&#xA;&lt;li&gt;Ensured seamless migration with minimal downtime during public deployments.&lt;/li&gt;&#xA;&lt;li&gt;Including a Grafana node in a DMZ network with &lt;em&gt;Reverse Proxy&lt;/em&gt;, which shows live statistics for internal network use.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h3 class=&#34;experience-title&#34; id=&#34;arrow_right-darkly-scanner&#34;&gt;&amp;#x27a1;&amp;#xfe0f; Darkly Scanner&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A &lt;em&gt;Shell script&lt;/em&gt; automation mini-project.&lt;/li&gt;&#xA;&lt;li&gt;Uses Nmap to help scan the ports of multiple domains and subdomains at once.&lt;/li&gt;&#xA;&lt;li&gt;Mostly useful for Pentesters and Bug Bounty Hunters.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Création d&#39;un nouveau thème</title>
      <link>http://localhost:1313/static-pages/posts/2014/09/cr%C3%A9ation-dun-nouveau-th%C3%A8me/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/09/cr%C3%A9ation-dun-nouveau-th%C3%A8me/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Ce tutoriel vous montrera comment créer un thème simple pour Hugo. Je suppose que vous êtes familier avec HTML, la ligne de commande bash, et que vous êtes à l&amp;rsquo;aise avec Markdown pour formater le contenu. Je vais expliquer comment Hugo utilise des modèles et comment vous pouvez organiser vos modèles pour créer un thème. Je ne couvrirai pas l&amp;rsquo;utilisation de CSS pour styliser votre thème.&lt;/p&gt;&#xA;&lt;p&gt;Nous allons commencer par créer un nouveau site avec un modèle très basique. Ensuite, nous ajouterons quelques pages et des publications. Avec de petites variations, vous pourrez créer de nombreux types de sites web.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/static-pages/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/about/</guid>
      <description>&lt;p&gt;Hi! My online presense is under the name TheOneOh1. I am a DevOps engineer with slight intrest in Cyber Security.&lt;/p&gt;&#xA;&lt;p&gt;I have expertise in IT infrastructure, network security, and deployment operations. I am proficient in CI/CD pipelines, containerization, and cloud services as well.&lt;/p&gt;&#xA;&lt;p&gt;I have total 4 years and 7 months of experience in the corporate world.&lt;/p&gt;&#xA;&lt;p&gt;After my Post Graduate Diploma in IT Infrastructure, Systems and Security, I joined C-DAC which is a Governement affiliated organisation, as a DevOps Engineer in 2022.&lt;/p&gt;</description>
    </item>
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://localhost:1313/static-pages/posts/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/04/hugo-template-primer/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for&#xA;its template engine. It is an extremely lightweight engine that provides a very&#xA;small amount of logic. In our experience that it is just the right amount of&#xA;logic to be able to create a good static website. If you have used other&#xA;template systems from different languages or frameworks you will find a lot of&#xA;similarities in Go templates.&lt;/p&gt;&#xA;&lt;p&gt;This document is a brief primer on using Go templates. The &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;Go docs&lt;/a&gt;&#xA;provide more details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Débuter avec Hugo</title>
      <link>http://localhost:1313/static-pages/posts/2014/04/d%C3%A9buter-avec-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/04/d%C3%A9buter-avec-hugo/</guid>
      <description>&lt;h2 id=&#34;étape-1-installer-hugo&#34;&gt;Étape 1. Installer Hugo&lt;/h2&gt;&#xA;&lt;p&gt;Allez sur la page de téléchargements de&#xA;&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo&lt;/a&gt; et téléchargez la version&#xA;appropriée à votre système d&amp;rsquo;exploitation et votre architecture.&lt;/p&gt;&#xA;&lt;p&gt;Sauvegardez le fichier téléchargé à un endroit précis, afin de l&amp;rsquo;utiliser dans&#xA;l&amp;rsquo;étape suivante.&lt;/p&gt;&#xA;&lt;p&gt;Des informations plus complètes sont disponibles sur la page&#xA;&lt;a href=&#34;http://localhost:1313/static-pages/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://localhost:1313/static-pages/posts/2014/04/getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/04/getting-started-with-hugo/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;&#xA;&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo releases&lt;/a&gt; and download the&#xA;appropriate version for your OS and architecture.&lt;/p&gt;&#xA;&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;&#xA;&lt;p&gt;More complete instructions are available at &lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Install Hugo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-2-build-the-docs&#34;&gt;Step 2. Build the Docs&lt;/h2&gt;&#xA;&lt;p&gt;Hugo has its own example site which happens to also be the documentation site&#xA;you are reading right now.&lt;/p&gt;&#xA;&lt;p&gt;Follow the following steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Clone the &lt;a href=&#34;http://github.com/spf13/hugo&#34;&gt;Hugo repository&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Go into the repo&lt;/li&gt;&#xA;&lt;li&gt;Run hugo in server mode and build the docs&lt;/li&gt;&#xA;&lt;li&gt;Open your browser to http://localhost:1313&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Corresponding pseudo commands:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction aux modèles (Hu)go</title>
      <link>http://localhost:1313/static-pages/posts/2014/04/introduction-aux-mod%C3%A8les-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/04/introduction-aux-mod%C3%A8les-hugo/</guid>
      <description>&lt;p&gt;Hugo utilise l&amp;rsquo;excellente librairie &lt;a href=&#34;http://golang.org/&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; pour&#xA;son moteur de modèles. c&amp;rsquo;est un moteur extrêmement léger qui offre un très petit&#xA;nombre de fonctions logiques. À notre expérience, c&amp;rsquo;est juste ce qu&amp;rsquo;il faut pour&#xA;créer un bon site web statique. Si vous avez déjà utilisé d&amp;rsquo;autre moteurs de&#xA;modèles pour différents langages ou frameworks, vous allez retrouver beaucoup de&#xA;similitudes avec les modèles go.&lt;/p&gt;&#xA;&lt;p&gt;Ce document est une introduction sur l&amp;rsquo;utilisation de Go templates. La&#xA;&lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;documentation go&lt;/a&gt; fourni plus de détails.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrer vers Hugo depuis Jekyll</title>
      <link>http://localhost:1313/static-pages/posts/2014/03/migrer-vers-hugo-depuis-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/static-pages/posts/2014/03/migrer-vers-hugo-depuis-jekyll/</guid>
      <description>&lt;h2 id=&#34;déplacez-le-contenu-statique-vers-static&#34;&gt;Déplacez le contenu statique vers &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Jekyll a une règle comme quoi tout répertoire qui ne commence pas par &lt;code&gt;_&lt;/code&gt; sera&#xA;copié tel-quel dans le répertoire &lt;code&gt;_site&lt;/code&gt;. Hugo garde tout le contenu statique&#xA;dans le répertoire &lt;code&gt;static&lt;/code&gt;. Vous devez donc déplacer tout ce type de contenu&#xA;là-dedans. Avec Jekylll, l&amp;rsquo;arborescence ressemblant à ceci :&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/&#xD;&#xA;    ▾ images/&#xD;&#xA;        logo.png&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
